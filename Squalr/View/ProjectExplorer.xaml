<UserControl
    x:Class="Squalr.View.ProjectExplorer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:Squalr.Source.Mvvm.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:intr="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="SqualrProjectExplorer"
    d:DesignHeight="256"
    d:DesignWidth="256"
    x:ClassModifier="internal"
    DataContext="{Binding ProjectExplorerViewModel, Source={StaticResource ViewModelLocator}}"
    mc:Ignorable="d">
    <x:Code>
        <![CDATA[ public ProjectExplorer() { InitializeComponent(); }]]>
    </x:Code>
    <UserControl.Resources>
        <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToVisibilityConverter
            x:Key="BooleanToHiddenConverter"
            False="Hidden"
            True="Visible" />
        <ContextMenu
            x:Key="RightClickMenu"
            Background="{StaticResource AvalonDock_Expression_BaseColor1}"
            BorderBrush="{StaticResource AvalonDock_Expression_BaseColor2}"
            Foreground="{StaticResource AvalonDock_Expression_BaseColor2}"
            Style="{StaticResource DropDownContextMenu}">
            <MenuItem Command="{Binding AddNewAddressItemCommand}" Header="Add New Address" />
            <MenuItem Command="{Binding AddNewScriptItemCommand}" Header="Add New Script" />
            <Separator />
            <MenuItem Command="{Binding PasteSelectionCommand}" Header="Paste" />
        </ContextMenu>
        <ContextMenu
            x:Key="ProjectItemRightClickMenu"
            Background="{StaticResource AvalonDock_Expression_BaseColor1}"
            BorderBrush="{StaticResource AvalonDock_Expression_BaseColor2}"
            Foreground="{StaticResource AvalonDock_Expression_BaseColor2}"
            Style="{StaticResource DropDownContextMenu}">
            <MenuItem Command="{Binding ProjectExplorerViewModel.ToggleSelectionActivationCommand, Source={StaticResource ViewModelLocator}}" Header="Toggle Selection" />
            <Separator />
            <MenuItem Command="{Binding ProjectExplorerViewModel.DeleteSelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Delete Selection" />
            <Separator />
            <MenuItem Command="{Binding ProjectExplorerViewModel.CopySelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Copy" />
            <MenuItem Command="{Binding ProjectExplorerViewModel.PasteSelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Paste" />
            <MenuItem Command="{Binding ProjectExplorerViewModel.CutSelectionCommand, Source={StaticResource ViewModelLocator}}" Header="Cut" />
        </ContextMenu>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <WrapPanel Grid.Row="0" Background="{StaticResource AvalonDock_Expression_BaseColor1}">
            <Menu
                Padding="4"
                Background="{StaticResource AvalonDock_Expression_BaseColor1}"
                BorderBrush="{StaticResource AvalonDock_Expression_BaseColor2}"
                Foreground="{StaticResource AvalonDock_Expression_BaseColor2}">
                <MenuItem
                    BorderThickness="0"
                    Style="{StaticResource DropDownAutoClose}"
                    ToolTip="Add New Item">
                    <MenuItem.Header>
                        <StackPanel Orientation="Horizontal">
                            <Image
                                Width="16"
                                Height="16"
                                Source="pack://application:,,,/SqualrCore;component/Content/Images/Increased.png" />
                            <Grid
                                x:Name="arrowGlyph"
                                Grid.Column="1"
                                Margin="4,3,4,3"
                                IsHitTestVisible="False">
                                <Path
                                    x:Name="Arrow"
                                    Width="7"
                                    Height="4"
                                    Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z"
                                    Fill="White" />
                            </Grid>
                        </StackPanel>
                    </MenuItem.Header>
                    <MenuItem
                        Background="{StaticResource AvalonDock_Expression_BaseColor1}"
                        BorderBrush="{StaticResource AvalonDock_Expression_BaseColor1}"
                        Command="{Binding AddNewAddressItemCommand}"
                        ToolTip="Add New Address">
                        <MenuItem.Header>
                            <WrapPanel Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}">
                                <Image
                                    Width="16"
                                    Height="16"
                                    Source="pack://application:,,,/SqualrCore;component/Content/Images/CollectValues.png" />
                                <TextBlock
                                    Padding="4,0,0,0"
                                    Foreground="{StaticResource AvalonDock_Expression_BaseColor2}"
                                    Text="Add Address" />
                            </WrapPanel>
                        </MenuItem.Header>
                    </MenuItem>
                    <MenuItem
                        Background="{StaticResource AvalonDock_Expression_BaseColor1}"
                        BorderBrush="{StaticResource AvalonDock_Expression_BaseColor1}"
                        Command="{Binding AddNewScriptItemCommand}"
                        ToolTip="Add New Script">
                        <MenuItem.Header>
                            <WrapPanel Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualWidth}">
                                <Image
                                    Width="16"
                                    Height="16"
                                    Source="pack://application:,,,/SqualrCore;component/Content/Images/Script.png" />
                                <TextBlock
                                    Padding="4,0,0,0"
                                    Foreground="{StaticResource AvalonDock_Expression_BaseColor2}"
                                    Text="Add Script" />
                            </WrapPanel>
                        </MenuItem.Header>
                    </MenuItem>
                </MenuItem>
            </Menu>
        </WrapPanel>

        <Grid Grid.Row="1">
            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">
                <ListView
                    Name="ProjectExplorerListView"
                    Background="{StaticResource AvalonDock_Expression_BaseColor3}"
                    BorderThickness="0"
                    ContextMenu="{StaticResource RightClickMenu}"
                    ItemsSource="{Binding ProjectItems}"
                    SelectionMode="Extended">
                    <ListView.ItemContainerStyle>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="ContextMenu" Value="{StaticResource ProjectItemRightClickMenu}" />
                        </Style>
                    </ListView.ItemContainerStyle>
                    <!--  Click and Selection events  -->
                    <intr:Interaction.Triggers>
                        <intr:EventTrigger EventName="SelectionChanged">
                            <intr:InvokeCommandAction Command="{Binding SelectProjectItemCommand}" CommandParameter="{Binding ElementName=ProjectExplorerListView, Path=SelectedItems}" />
                        </intr:EventTrigger>
                        <intr:EventTrigger EventName="MouseDoubleClick">
                            <intr:InvokeCommandAction Command="{Binding EditProjectItemCommand}" CommandParameter="{Binding ElementName=ProjectExplorerListView, Path=SelectedItem}" />
                        </intr:EventTrigger>
                    </intr:Interaction.Triggers>
                    <!--  Keyboard shortcuts  -->
                    <ListView.InputBindings>
                        <KeyBinding
                            Key="C"
                            Command="{Binding CopySelectionCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding
                            Key="X"
                            Command="{Binding CutSelectionCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding
                            Key="V"
                            Command="{Binding PasteSelectionCommand}"
                            Modifiers="Ctrl" />
                        <KeyBinding Key="Space" Command="{Binding ToggleSelectionActivationCommand}" />
                        <KeyBinding Key="Delete" Command="{Binding DeleteSelectionCommand}" />
                    </ListView.InputBindings>
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListView}}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" Grid.ColumnSpan="3">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Grid.Column="0">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <GradientStop Offset="0.0" Color="Red" />
                                                <GradientStop Offset="{Binding Path=CooldownProgress, FallbackValue='0.0'}" Color="Transparent" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <!--
                                    <TextBlock
                                        Grid.Column="0"
                                        Margin="4,0,0,0"
                                        Foreground="Yellow"
                                        IsHitTestVisible="False"
                                        Text="{Binding Path=CurrentCooldown, FallbackValue=''}" />
                                    -->
                                    <Rectangle Grid.Column="1">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                                <GradientStop Offset="{Binding Path=DurationProgress, FallbackValue='0.0'}" Color="Transparent" />
                                                <GradientStop Offset="1.0" Color="Blue" />
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                    <!--
                                    <TextBlock
                                        Grid.Column="1"
                                        Margin="4,0,0,0"
                                        Foreground="LightBlue"
                                        IsHitTestVisible="False"
                                        Text="{Binding Path=CurrentDuration, FallbackValue=''}" />
                                    -->
                                </Grid>
                                <CheckBox
                                    Grid.Column="0"
                                    Width="16"
                                    Height="16"
                                    Margin="0,0,4,0"
                                    IsChecked="{Binding Path=IsActivated}" />
                                <Image
                                    Grid.Column="1"
                                    Width="16"
                                    Height="16"
                                    IsHitTestVisible="False"
                                    Source="{Binding Path=Icon}" />
                                <TextBlock
                                    Grid.Column="2"
                                    Margin="4,0,0,0"
                                    Foreground="{StaticResource AvalonDock_Expression_BaseColor12}"
                                    IsHitTestVisible="False"
                                    Text="{Binding Path=Name}" />
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </ScrollViewer>
        </Grid>
    </Grid>
</UserControl>